{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/GeTogether/react-front-end/src/components/map/Places.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useLoadScript } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport './places.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Places(props) {\n  _s();\n\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDQ119x3IFhG3LCLvV16QaZWzIY1RpDtgA\",\n    libraries: [\"places\"]\n  });\n  const {\n    setCoords,\n    setValidAddress\n  } = props;\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"places-container\",\n    children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      setCoords: setCoords,\n      setValidAddress: setValidAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Places, \"0WnOjCnOubliry/bcWK4XUbomlA=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Places;\n\nconst PlacesAutocomplete = _ref => {\n  _s2();\n\n  let {\n    setCoords,\n    setValidAddress\n  } = _ref;\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: {\n      status,\n      data\n    },\n    clearSuggestions\n  } = usePlacesAutocomplete();\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n    const results = await getGeocode({\n      address\n    });\n    const {\n      lat,\n      lng\n    } = await getLatLng(results[0]);\n    setCoords({\n      lat,\n      lng,\n      address\n    });\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    setValidAddress(\"d-none\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Combobox, {\n    onSelect: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n      value: value,\n      onChange: handleChange,\n      disabled: !ready,\n      className: \"combobox-input\",\n      placeholder: \"Search an address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n      children: /*#__PURE__*/_jsxDEV(ComboboxList, {\n        children: status === \"OK\" && data.map(_ref2 => {\n          let {\n            place_id,\n            description\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(ComboboxOption, {\n            value: description\n          }, place_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PlacesAutocomplete, \"thdSH5dLDpXDOr88sGg6kqFV+gs=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n\n_c2 = PlacesAutocomplete;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Places\");\n$RefreshReg$(_c2, \"PlacesAutocomplete\");","map":{"version":3,"names":["useState","useLoadScript","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","Places","props","isLoaded","googleMapsApiKey","libraries","setCoords","setValidAddress","PlacesAutocomplete","ready","value","setValue","suggestions","status","data","clearSuggestions","handleSelect","address","results","lat","lng","handleChange","e","target","map","place_id","description"],"sources":["/home/labber/lighthouse/GeTogether/react-front-end/src/components/map/Places.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useLoadScript } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport './places.scss'\n\nexport default function Places(props) {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDQ119x3IFhG3LCLvV16QaZWzIY1RpDtgA\",\n    libraries: [\"places\"],\n  });\n  const {setCoords,setValidAddress} = props;\n\n  if (!isLoaded) return <div>Loading...</div>;\n  return (<div className=\"places-container\">\n  <PlacesAutocomplete  setCoords={setCoords} setValidAddress={setValidAddress}/>\n</div>);\n}\n\nconst PlacesAutocomplete = ({ setCoords, setValidAddress }) => {\n  const {\n    ready,\n    value,\n    setValue,\n    suggestions: { status, data },\n    clearSuggestions,\n  } = usePlacesAutocomplete();\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    const results = await getGeocode({ address });\n    const { lat, lng } = await getLatLng(results[0]);\n \n    setCoords({ lat, lng, address });\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    setValidAddress(\"d-none\");\n  }\n\n  return (\n    <Combobox onSelect={handleSelect}>\n      <ComboboxInput\n        value={value}\n        onChange={handleChange}\n        disabled={!ready}\n        className=\"combobox-input\"\n        placeholder=\"Search an address\"\n      />\n      <ComboboxPopover>\n        <ComboboxList>\n          {status === \"OK\" &&\n            data.map(({ place_id, description }) => (\n              <ComboboxOption key={place_id} value={description} />\n            ))}\n        </ComboboxList>\n      </ComboboxPopover>\n    </Combobox>\n  );\n};"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,qBAAP,IACEC,UADF,EAEEC,SAFF,QAGO,yBAHP;AAIA,SACEC,QADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,iBANP;AAOA,OAAO,4BAAP;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACpC,MAAM;IAAEC;EAAF,IAAeX,aAAa,CAAC;IACjCY,gBAAgB,EAAE,yCADe;IAEjCC,SAAS,EAAE,CAAC,QAAD;EAFsB,CAAD,CAAlC;EAIA,MAAM;IAACC,SAAD;IAAWC;EAAX,IAA8BL,KAApC;EAEA,IAAI,CAACC,QAAL,EAAe,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACf,oBAAQ;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACR,QAAC,kBAAD;MAAqB,SAAS,EAAEG,SAAhC;MAA2C,eAAe,EAAEC;IAA5D;MAAA;MAAA;MAAA;IAAA;EADQ;IAAA;IAAA;IAAA;EAAA,QAAR;AAGD;;GAXuBN,M;UACDT,a;;;KADCS,M;;AAaxB,MAAMO,kBAAkB,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEF,SAAF;IAAaC;EAAb,CAAmC;EAC7D,MAAM;IACJE,KADI;IAEJC,KAFI;IAGJC,QAHI;IAIJC,WAAW,EAAE;MAAEC,MAAF;MAAUC;IAAV,CAJT;IAKJC;EALI,IAMFtB,qBAAqB,EANzB;;EAQA,MAAMuB,YAAY,GAAG,MAAOC,OAAP,IAAmB;IACtCN,QAAQ,CAACM,OAAD,EAAU,KAAV,CAAR;IACAF,gBAAgB;IAEhB,MAAMG,OAAO,GAAG,MAAMxB,UAAU,CAAC;MAAEuB;IAAF,CAAD,CAAhC;IACA,MAAM;MAAEE,GAAF;MAAOC;IAAP,IAAe,MAAMzB,SAAS,CAACuB,OAAO,CAAC,CAAD,CAAR,CAApC;IAEAZ,SAAS,CAAC;MAAEa,GAAF;MAAOC,GAAP;MAAYH;IAAZ,CAAD,CAAT;EACD,CARD;;EAUA,MAAMI,YAAY,GAAIC,CAAD,IAAO;IAC1BX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV,CAAR;IACAH,eAAe,CAAC,QAAD,CAAf;EACD,CAHD;;EAKA,oBACE,QAAC,QAAD;IAAU,QAAQ,EAAES,YAApB;IAAA,wBACE,QAAC,aAAD;MACE,KAAK,EAAEN,KADT;MAEE,QAAQ,EAAEW,YAFZ;MAGE,QAAQ,EAAE,CAACZ,KAHb;MAIE,SAAS,EAAC,gBAJZ;MAKE,WAAW,EAAC;IALd;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,eAAD;MAAA,uBACE,QAAC,YAAD;QAAA,UACGI,MAAM,KAAK,IAAX,IACCC,IAAI,CAACU,GAAL,CAAS;UAAA,IAAC;YAAEC,QAAF;YAAYC;UAAZ,CAAD;UAAA,oBACP,QAAC,cAAD;YAA+B,KAAK,EAAEA;UAAtC,GAAqBD,QAArB;YAAA;YAAA;YAAA;UAAA,QADO;QAAA,CAAT;MAFJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA3CD;;IAAMjB,kB;UAOAf,qB;;;MAPAe,kB"},"metadata":{},"sourceType":"module"}